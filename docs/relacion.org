#+STARTUP: showall

* 1 Iteracion: Prototipo

Prototipo de interfaz gráfico

** A realizar en Haskell:
*** con Gtk como libreria GUI
para el estado en Gtk se usa MVar para compartir estado entre eventos y StateM para pasar el estado dentro del manejador de eventos

*** Cairo para dibujar
*** xmonad como referencia
*** zipper estructura principal

** Casos de Uso
- [ ] Insertar un nodo computación
- [ ] Borrar un nodo de computación
- [X] Mover un nodo computación
- [X] Juntar una salida de un nodo con una entrada de otro
- [ ] Borrar una conexion
- [ ] Mover una entrada
- [ ] Mover una salida
- [ ] Crear una nueva clase de nodo

** Diccionario de tipos
*** Nodo de Computación
*** Clase de Nodo
*** Flujo de datos
*** Punto de IO

** Dudas
*** Usar en JSON   
(0,{'name':'uno',....})  o bien 'uno'={,....}

** Ayuda consultada
*** Diseño de Xmonad
*** Zipper como estructura básica
*** Interfaz de Usuario de Blender
*** Como construir programas de Haskell
http://www.haskell.org/haskellwiki/How_to_write_a_Haskell_program
*** http://en.wikipedia.org/wiki/Dataflow_programming
