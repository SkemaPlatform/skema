#+STARTUP: showall

* 1 Iteracion: Prototipo

Prototipo de interfaz gráfico

** A realizar en Haskell:
*** con Gtk como libreria GUI
para el estado en Gtk se usa MVar para compartir estado entre eventos y StateM para pasar el estado dentro del manejador de eventos

*** Cairo para dibujar
*** xmonad como referencia
*** zipper estructura principal

** Casos de Uso
- [X] Insertar un nodo computación
- [X] Borrar un nodo de computación
- [X] Mover un nodo computación
- [X] Juntar una salida de un nodo con una entrada de otro
- [X] Borrar una conexion
- [X] Mover una entrada
- [X] Mover una salida
- [X] Crear una nueva clase de nodo

** Diccionario de tipos
*** Nodo de Computación
*** Clase de Nodo
*** Flujo de datos
*** Punto de IO

** Dudas
*** Usar en JSON   
(0,{'name':'uno',....})  o bien 'uno'={,....}

** Ayuda consultada
*** Diseño de Xmonad
*** Zipper como estructura básica
*** Interfaz de Usuario de Blender
*** Como construir programas de Haskell
http://www.haskell.org/haskellwiki/How_to_write_a_Haskell_program
*** http://en.wikipedia.org/wiki/Dataflow_programming
*** Codigo fuente de leksah

** Conclusiones
   La seleccion de librerias ha sido muy buena, el conjunto de Cairo + GTK en el
   editor no podia ser mejor. En el servidor se usa Happstack para implementar
   los servicios web.

* 2 Iteracion: Ejecucion de flujos

Programa completo capaz de ejecutar un flujo

** A realizar
*** Servicio web que ejecute los flujos
*** Empezar a documentar más

** Casos de Uso
- [X] Exportar flujo a fichero
- [X] Ejecutar flujo con datos simples

** Dudas
*** Probar Leksah para ver si se puede seguir desarrollando

** Conclusiones
   No se ha podido completar todos lo pasos deseados, pero lo principal que es
   ejecutar un flujo completo se ha lelvado a cabo.

* 3 Iteracion: Editar Constantes

** A realizar
*** Incluir constantes en los nodos de los kernels
*** Llamar al servicio web desde el editor y desde programa
*** Mejorar el codigo y la documentación

** Casos de Uso
- [ ] Salvar proyecto
- [ ] Cargar proyecto
- [ ] Ejecutar el flujo desde el editor
- [ ] Añadir constantes a un kernel
- [ ] Dar valor a las constantes en el kernel
- [ ] Dar valor a las constantes en el nodo
- [ ] Dar valor a las constantes en la ejecucion

* Apendice: Instalacion

** paquetes a instalar adicionales:
gtk2hs-buildtools
libcairo2-dev
libpango1.0-dev
libxml2-dev
libgtk2.0-dev
libglade2-dev
libgtksourceview2.0-dev

* Apendice: Teoria
** Los Program Flows son DAG (Directed Acyclic Graphs)
** http://en.wikipedia.org/wiki/Kahn_process_networks
** http://neo4j.org/learn/  Graph Database
** http://www.tinkerpop.com/ Tinker Pop Graph Stack
** http://www.mnbtech.com/index.php?id=106 hprcARCHITECT
   proyecto similar de ejecucion de flujos en HPC
